===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer()`` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.
	
	::

		>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
		>>> matrix = [[1, 2, 3],[4, 5, 6]]
		>>> matrix_divided(matrix, 3)
		[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
		

	::

		>>> matrix = [[1, 2, 3.0],[-4, 5, 6.00]]
		>>> matrix_divided(matrix, 3)
		[[0.33, 0.67, 1.0], [-1.33, 1.67, 2.0]]

	::

		>>> matrix = [[1, 2, 3.0],["hello", 5, 6.00]]
		>>> matrix_divided(matrix, 3)
		Traceback (most recent call last):
		TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	::

		>>> matrix = [[1, 2, 3.0],[4, 5, 6.00, 7, 8]]
		>>> matrix_divided(matrix, 3)
		Traceback (most recent call last):
		TypeError: Each row of the matrix must have the same size

	::

		>>> matrix = [[1, 2, 3.0],[4, 5, 6.00]]
		>>> matrix_divided(matrix, "3")
		Traceback (most recent call last):
		TypeError: div must be a number

	::

		>>> matrix = [[1, 2, 3.0],[4, 5, 6.00]]
		>>> matrix_divided(matrix, 0)
		Traceback (most recent call last):
		ZeroDivisionError: division by zero

	::

		>>> matrix = [[1, 2, 3.0],[4, 5, 6.00]]
		>>> matrix_divided(matrix, float('inf'))
		Traceback (most recent call last):
		ZeroDivisionError: division by zero
